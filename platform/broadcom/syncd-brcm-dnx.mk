SYNCD_DNX = syncd-dnx_1.0.0_$(CONFIGURED_ARCH).deb
$(SYNCD_DNX)_RDEPENDS += $(LIBSAIREDIS) $(LIBSAIMETADATA)
$(SYNCD_DNX)_DPKG_TARGET = binary-syncd
$(SYNCD_DNX)_SRC_PATH = $(SRC_PATH)/sonic-sairedis
$(SYNCD_DNX)_DEPENDS += $(LIBSWSSCOMMON_DEV) $(LIBSAIREDIS)
$(SYNCD_DNX)_RDEPENDS += $(LIBSWSSCOMMON)
$(SYNCD_DNX)_DEB_BUILD_OPTIONS = nocheck
$(SYNCD_DNX)_BUILD_ENV = PKG_NAME=$(SYNCD_DNX)
SONIC_DPKG_DEBS += $(SYNCD_DNX)

ifeq ($(ENABLE_SYNCD_RPC),y)
SYNCD_DNX_RPC = syncd-dnx-rpc_1.0.0_$(CONFIGURED_ARCH).deb
$(SYNCD_DNX_RPC)_RDEPENDS += $(LIBSAIREDIS) $(LIBSAIMETADATA)
$(SYNCD_DNX_RPC)_BUILD_ENV = PKG_NAME=$(SYNCD_DNX_RPC)
$(eval $(call add_derived_package,$(SYNCD_DNX),$(SYNCD_DNX_RPC)))

# Inject libthrift build dependency for RPC build
$(SYNCD_DNX)_DEPENDS += $(LIBSWSSCOMMON_DEV) $(LIBTHRIFT_DEV)
$(SYNCD_DNX)_DPKG_TARGET = binary-syncd-rpc
endif

ifeq ($(INSTALL_DEBUG_TOOLS), y)
SYNCD_DNX_DBG = syncd-dnx-dbg_1.0.0_$(CONFIGURED_ARCH).deb
$(SYNCD_DNX_DBG)_DEPENDS += $(SYNCD_DNX)
$(SYNCD_DNX_DBG)_RDEPENDS += $(SYNCD_DNX)
$(SYNCD_DNX_DBG)_BUILD_ENV = PKG_NAME=$(SYNCD_DNX_DBG)
$(eval $(call add_derived_package,$(SYNCD_DNX),$(SYNCD_DNX_DBG)))
endif

ifeq ($(ENABLE_SYNCD_DNX_RPC),y)
SYNCD_DNX_RPC_DBG = syncd-dnx-rpc-dbg_1.0.0_$(CONFIGURED_ARCH).deb
$(SYNCD_DNX_RPC_DBG)_DEPENDS += $(SYNCD_DNX_RPC)
$(SYNCD_DNX_RPC_DBG)_RDEPENDS += $(SYNCD_DNX_RPC)
$(eval $(call add_derived_package,$(SYNCD_DNX),$(SYNCD_DNX_RPC_DBG)))
endif
