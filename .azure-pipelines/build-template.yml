parameters:
- name: cache_mode
  type: string
  values:
  - wcache

jobs:
- job:
  displayName: "broadcom"
  timeoutInMinutes: 600
  steps:
  - checkout: self
    clean: true
    submodules: recursive
    displayName: 'Checkout code'
  - script: |
       git submodule foreach --recursive git clean -xfdf
       git submodule foreach --recursive git reset --hard
       git submodule update --init --recursive
    displayName: 'reset submodules'
  - script: |
      sudo modprobe overlay
      CACHE_OPTIONS="SONIC_DPKG_CACHE_METHOD=${{ parameters.cache_mode }} SONIC_DPKG_CACHE_SOURCE=/nfs/dpkg_cache/broadcom"
      ENABLE_DOCKER_BASE_PULL=y make configure PLATFORM=broadcom
      trap "sudo rm -rf fsroot" EXIT
      make USERNAME=admin SONIC_BUILD_JOBS=$(nproc) $CACHE_OPTIONS target/sonic-broadcom.bin && \
          ENABLE_SYNCD_RPC=y make USERNAME=admin SONIC_BUILD_JOBS=$(nproc) $CACHE_OPTIONS target/docker-syncd-brcm-rpc.gz
    displayName: 'Build sonic image'
  - publish: $(System.DefaultWorkingDirectory)/
    artifact: sonic-buildimage.broadcom
    displayName: "Archive sonic image"
  - script: |
      sudo kill -9 `sudo cat /var/run/march/docker.pid` || true
      sudo rm -f /var/run/march/docker.pid || true
      sudo rm -rf fsroot || true
      git clean -xfdf;
      git reset --hard;
      git submodule foreach --recursive 'git clean -xfdf || true';
      git submodule foreach --recursive 'git reset --hard || true';
      git submodule foreach --recursive 'git remote update || true';
      git submodule update --init --recursive;
    displayName: "Clean Workspace"

- job:
  displayName: "mellanox"
  timeoutInMinutes: 600
  steps:
  - checkout: self
    clean: true
    submodules: recursive
    displayName: 'Checkout code'

  - script: |
       git submodule foreach --recursive git clean -xfdf
       git submodule foreach --recursive git reset --hard
       git submodule update --init --recursive
    displayName: 'reset submodules'
  - script: |
      sudo modprobe overlay
      CACHE_OPTIONS="SONIC_DPKG_CACHE_METHOD=${{ parameters.cache_mode }} SONIC_DPKG_CACHE_SOURCE=/nfs/dpkg_cache/mellanox"
      ENABLE_DOCKER_BASE_PULL=y make configure PLATFORM=mellanox
      trap "sudo rm -rf fsroot" EXIT
      make USERNAME=admin SONIC_BUILD_JOBS=$(nproc) $CACHE_OPTIONS target/sonic-mellanox.bin && \
          ENABLE_SYNCD_RPC=y make USERNAME=admin SONIC_BUILD_JOBS=$(nproc) $CACHE_OPTIONS target/docker-syncd-mlnx-rpc.gz
    displayName: 'Build sonic image'
  - publish: $(System.DefaultWorkingDirectory)/
    artifact: sonic-buildimage.mellanox
    displayName: "Archive sonic image"
  - script: |
      sudo kill -9 `sudo cat /var/run/march/docker.pid` || true
      sudo rm -f /var/run/march/docker.pid || true
      sudo rm -rf fsroot || true
      git clean -xfdf;
      git reset --hard;
      git submodule foreach --recursive 'git clean -xfdf || true';
      git submodule foreach --recursive 'git reset --hard || true';
      git submodule foreach --recursive 'git remote update || true';
      git submodule update --init --recursive;
    displayName: "Clean Workspace"

- job:
  displayName: "kvm"
  timeoutInMinutes: 600
  steps:
  - checkout: self
    clean: true
    submodules: recursive
    displayName: 'Checkout code'

  - script: |
       git submodule foreach --recursive git clean -xfdf
       git submodule foreach --recursive git reset --hard
       git submodule update --init --recursive
    displayName: 'reset submodules'
  - script: |
      echo $(Build.BuildNumber)
      sudo modprobe overlay
      CACHE_OPTIONS="SONIC_DPKG_CACHE_METHOD=${{ parameters.cache_mode }} SONIC_DPKG_CACHE_SOURCE=/nfs/dpkg_cache/vs"
      ENABLE_DOCKER_BASE_PULL=y make configure PLATFORM=vs
      trap "sudo rm -rf fsroot" EXIT
      make USERNAME=admin SONIC_BUILD_JOBS=$(nproc) $CACHE_OPTIONS \
          target/docker-sonic-vs.gz target/sonic-vs.img.gz target/docker-ptf.gz
    displayName: 'Build sonic image'
  - publish: $(System.DefaultWorkingDirectory)/
    artifact: sonic-buildimage.kvm
    displayName: "Archive sonic image"
  - script: |
      sudo kill -9 `sudo cat /var/run/march/docker.pid` || true
      sudo rm -f /var/run/march/docker.pid || true
      sudo rm -rf fsroot || true
      git clean -xfdf;
      git reset --hard;
      git submodule foreach --recursive 'git clean -xfdf || true';
      git submodule foreach --recursive 'git reset --hard || true';
      git submodule foreach --recursive 'git remote update || true';
      git submodule update --init --recursive;
    displayName: "Clean Workspace"
