# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml
# Build and push sonic-slave-[buster|jessie|stretch] images for amd64/armhf/arm64
parameters:
- name: arch
  type: string
  values:
  - amd64
  - armhf
  - arm64
- name: dist
  type: string
  values:
  - bullseye
  - buster
  - stretch
  - jessie
- name: registry_url
  type: string
  default: sonicdev-microsoft.azurecr.io
- name: registry_conn
  type: string
  default: sonicdev
- name: pool
  type: string
  default: sonicbld
  values:
  - sonicbld
  - sonicbld-arm64
  - sonicbld-armhf

variables:
- template: .azure-pipelines/azure-pipelines-repd-build-variables.yml@buildimage

jobs:
- job: Build_${{ parameters.dist }}_${{ parameters.arch }}
  timeoutInMinutes: 360
  pool: ${{ parameters.pool }}
  steps:
  - template: cleanup.yml
  - template: '/.azure-pipelines/template-clean-sonic-slave.yml@buildimage'
  - checkout: self
    clean: true
  - bash: |
      set -ex
      echo ${{ parameters.arch }} > .arch

      SLAVE_BASE_IMAGE=sonic-slave-${{ parameters.dist }}
      [[ "${{ parameters.arch }}" != "amd64" ]] && SLAVE_BASE_IMAGE=${SLAVE_BASE_IMAGE}-${{ parameters.arch }}
      SLAVE_BASE_TAG=$(make showtag | grep slave-${{ parameters.dist }}: | awk -F: '{print$2}')

      if docker pull $REGISTRY_SERVER/$SLAVE_BASE_IMAGE:$SLAVE_BASE_TAG;then
        set +x
        echo "$REGISTRY_SERVER/$SLAVE_BASE_IMAGE:$SLAVE_BASE_TAG exists, Skip build"
        echo "##vso[task.setvariable variable=SKIP_BUILD]YES"
      fi
    env:
      REGISTRY_SERVER: ${{ parameters.registry_url }}
    displayName: check if we need to build
  - bash: |
      set -ex

      SLAVE_BASE_IMAGE=sonic-slave-${{ parameters.dist }}
      [[ "${{ parameters.arch }}" != "amd64" ]] && SLAVE_BASE_IMAGE=${SLAVE_BASE_IMAGE}-${{ parameters.arch }}
      SLAVE_BASE_TAG=$(make showtag | grep slave-${{ parameters.dist }}: | awk -F: '{print$2}')

      tmpfile=$(mktemp)
      BLDENV=${{ parameters.dist }} $(VERSION_CONTROL_OPTIONS) make -f Makefile.work sonic-slave-build | tee $tmpfile

      docker tag $SLAVE_BASE_IMAGE:$SLAVE_BASE_TAG $REGISTRY_SERVER/$SLAVE_BASE_IMAGE:$SLAVE_BASE_TAG
      docker push $REGISTRY_SERVER/$SLAVE_BASE_IMAGE:$SLAVE_BASE_TAG

      if [[ "${{ parameters.arch }}" == "amd64" ]] && [[ "$(Build.SourceBranchName)" == "master" ]];then
        docker tag $SLAVE_BASE_IMAGE:$SLAVE_BASE_TAG $REGISTRY_SERVER/$SLAVE_BASE_IMAGE:latest
        docker push $REGISTRY_SERVER/$SLAVE_BASE_IMAGE:latest
      fi

    env:
      REGISTRY_SERVER: ${{ parameters.registry_url }}
    condition: and(succeeded(), ne(variables['SKIP_BUILD'], 'Yes'))
    displayName: Build/publish sonic-slave-${{ parameters.dist }}-${{ parameters.arch }}
