jobs:
- job: Build
  timeoutInMinutes: 120
  pool: sonicbld
  steps:
  - checkout: self
    clean: true
    submodules: recursive
  - script: |
      set -ex
      case $(Build.SourceBranchName) in
        202012 | 202106)
          bldenvs="buster"
          ;;
        *)
          bldenvs="buster bullseye"
          ;;
      esac
      for bldenv in $bldenvs
      do
        BLDENV=$bldenv make -f Makefile.work configure PLATFORM=vs ENABLE_DOCKER_BASE_PULL=y
      done
      set +x
      echo "##vso[task.setvariable variable=bldenvs;]$bldenvs"
    displayName: Make configure
  - script: |
      set -ex
      for bldenv in $(bldenvs)
      do
        LIBNL3_VERSION_BASE=$(grep "LIBNL3_VERSION_BASE =" rules/libnl3.mk | awk '{print$3}')
        LIBNL3_VERSION=$(grep "LIBNL3_VERSION =" rules/libnl3.mk | awk '{print$3}' | sed -e "s/(//" -e "s/)//" -e "s/\\$//" -e "s/LIBNL3_VERSION_BASE/$LIBNL3_VERSION_BASE/")
        SONIC_BUILD_JOBS=$(nproc) BLDENV=$bldenv make -f Makefile.work target/debs/$bldenv/libnl-3-200_${LIBNL3_VERSION}_amd64.deb ENABLE_DOCKER_BASE_PULL=y

        LIBYANG_VERSION_BASE=$(grep "LIBYANG_VERSION_BASE =" rules/libyang.mk | awk '{print$3}')
        LIBYANG_VERSION=$(grep "LIBYANG_VERSION =" rules/libyang.mk | awk '{print$3}' | sed -e "s/\\$//" -e "s/(//" -e "s/)//" -e "s/LIBYANG_VERSION_BASE/$LIBYANG_VERSION_BASE/")
        SONIC_BUILD_JOBS=$(nproc) BLDENV=$bldenv make -f Makefile.work target/debs/$bldenv/libyang_${LIBYANG_VERSION}_amd64.deb
      done
      mv target $(Build.ArtifactStagingDirectory)
    displayName: Make common lib packages
  - publish: $(Build.ArtifactStagingDirectory)
    artifact: common-lib
