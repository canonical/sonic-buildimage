#!/bin/sh -e
#
# rc.local
#
# This script is executed at the end of each multiuser runlevel.
# Make sure that the script will "exit 0" on success or any other
# value on error.
#
# In order to enable or disable this script just change the execution
# bits.
#
# By default this script does nothing.

# If the machine.conf is absent, it indicates that the unit booted
# into SONiC from another NOS. Extract the machine.conf from ONIE.
if [ ! -e /host/machine.conf ]; then
    onie_dev=$(blkid | grep ONIE-BOOT | head -n 1 | awk '{print $1}' |  sed -e 's/:.*$//')
    mkdir -p /mnt/onie-boot
    mount $onie_dev /mnt/onie-boot
    onie_grub_cfg=/mnt/onie-boot/onie/grub/grub-machine.cfg
    
    if [ ! -e $onie_grub_cfg ]; then
        echo "$onie_grub_cfg not found" >> /etc/migration.log
    else
        . ./$onie_grub_cfg
        grep = $onie_grub_cfg | sed -e 's/onie_//' -e 's/=.*$//' | while read var ; do
            eval val='$'onie_$var
            echo "onie_${var}=${val}" >> /host/machine.conf
        done
    fi

    migration="TRUE"
    umount /mnt/onie-boot
fi

. /host/machine.conf

echo "install platform dependent packages at the first boot time"

sonic_version=$(cat /etc/sonic/sonic_version.yml | grep build_version | cut -f2 -d" ")

if [ -f /host/image-$sonic_version/platform/firsttime ]; then

    if [ -n "$aboot_platform" ]; then
        platform=$aboot_platform
    elif [ -n "$onie_platform" ]; then
        platform=$onie_platform
    else
        echo "Unknown sonic platform"
        rm /host/image-$sonic_version/platform/firsttime
        exit 0
    fi

    # Try to take old configuration saved during installation
    if [ -d /host/old_config ]; then
        rm -f /host/old_config/sonic_version.yml
        mv -f /host/old_config/* /etc/sonic/
    elif [ -f /host/minigraph.xml ]; then
        mv /host/minigraph.xml /etc/sonic/
        # Combine information in minigraph and init_cfg.json to form initiate config DB dump file.
        # TODO: After moving all information from minigraph to DB, sample config DB dump should be provide
        if [ -f /etc/sonic/init_cfg.json ]; then
            sonic-cfggen -m -j /etc/sonic/init_cfg.json --print-data > /etc/sonic/config_db.json
        else
            sonic-cfggen -m --print-data > /etc/sonic/config_db.json
        fi
    else
        cp /usr/share/sonic/device/$platform/minigraph.xml /etc/sonic/
        if [ -f /etc/sonic/init_cfg.json ]; then
            sonic-cfggen -m -j /etc/sonic/init_cfg.json --print-data > /etc/sonic/config_db.json
        else
            sonic-cfggen -m --print-data > /etc/sonic/config_db.json
        fi
    fi

    if [ -d /host/image-$sonic_version/platform/$platform ]; then
        dpkg -i /host/image-$sonic_version/platform/$platform/*.deb
    fi

    # If the unit booted into SONiC from another NOS's grub, we now
    # install a grub for SONiC based on ONIE grub.
    if [ -n "$onie_platform" ] && [ -n "$migration" ]; then
        mkdir -p /host/image-$sonic_version/tmp
        cd /host/image-$sonic_version/tmp

        # Extract ONIE's ramdisk which contain's the ONIE grub
        mount $onie_dev /mnt/onie-boot
        cp /mnt/onie-boot/onie/initrd.img-3.2.69-onie initrd.img-3.2.69-onie.xz
        xz -d initrd.img-3.2.69-onie.xz 
        mv initrd.img-3.2.69-onie initrd.img-3.2.69-onie.cpio
        cpio -idv < initrd.img-3.2.69-onie.cpio
        cpio_retval=$?

        # Get the device and grub directory to be used for grub-install
        sonic_dev=$(blkid | grep SONiC-OS | head -n 1 | awk '{print $1}' |  sed -e 's/[0-9]:.*$//')
        grub_platform_dir=`find . -name kernel.img -print`
        grub_platform_dir=$(dirname "${grub_platform_dir}")

        # Install the grub for SONiC
        if [ "$cpio_retval" -eq 0 ] && [ -n "$sonic_dev" ] && [ -n "$grub_platform_dir" ]; then
            grub-install --boot-directory=/host --recheck $sonic_dev --directory=/host/image-$sonic_version/tmp/$grub_platform_dir 2>/dev/null
        else
            echo "Unable install grub" >> /etc/migration.log
        fi

        # The SONiC "raw" build mode has already generated a proto grub.cfg
        # as part of the migration. Platform specific constants need to be
        # retrieved from installer.conf and assigned.
        . /usr/share/sonic/device/$platform/installer.conf

        sed -i -e "s/%%CONSOLE_PORT%%/$CONSOLE_PORT/g" /host/grub.cfg
        sed -i -e "s/%%CONSOLE_DEV%%/$CONSOLE_DEV/g" /host/grub.cfg

        # Set the root based on the label
        sonic_root=$(blkid | grep SONiC-OS | head -n 1 | awk '{print $1}' |  sed -e 's/:.*$//')
        sonic_root=$(echo "$sonic_root" | sed 's/\//\\\//g')
        sed -i -e "s/%%SONIC_ROOT%%/$sonic_root/g" /host/grub.cfg

        # Add the Diag and ONIE entries
        . /mnt/onie-boot/onie/grub.d/50_onie_grub >> /host/grub.cfg

        # Set the SONiC's grub config
        mv /host/grub.cfg /host/grub/grub.cfg

        # Cleanup
        cd /host/image-$sonic_version
        rm -fr /host/image-$sonic_version/tmp
        umount /mnt/onie-boot
    fi

    rm /host/image-$sonic_version/platform/firsttime
fi

exit 0
