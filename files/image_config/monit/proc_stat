#
  set daemon 60            # check services at 1-minute intervals
#   with start delay 240    # optional: delay the first check by 4-minutes (by
#                           # default Monit check immediately after Monit start)
set logfile syslog
set idfile /var/lib/monit/id
#
###############################################################################
## Includes all the critical processes running in SONiC containers.
###############################################################################

# For syncd container.
check process syncd matching "/usr/bin/syncd --diag"
	if does not exist then alert

check process dsserve matching "/usr/bin/dsserve"
	if does not exist then alert

# For SNMP container.
check process snmpd matching "/usr/sbin/snmpd"
	if does not exist then alert

check process snmpd_subagent matching "python3.6 -m sonic_ax_impl"
	if does not exist then alert

# For Teamd container.
check process teamd matching "/usr/bin/teamd -r -t"
	if does not exist then alert

check process teammgrd matching "/usr/bin/teammgrd"
	if does not exist then alert

check process teamsyncd matching "/usr/bin/teamsyncd"
	if does not exist then alert

#check process xcvrd matching "xcvrd"
#if does not exist then alert

# For DHCP_Relay container.
check process dhcprelay matching "/usr/sbin/dhcrelay"
	if does not exist then alert
#
# For Pmon container.
check process ledd matching "/usr/bin/python /usr/bin/ledd"
	if does not exist then alert

check process fancontrol matching "/bin/bash /usr/sbin/fancontrol"
	if does not exist then alert

check process psud matching "/usr/bin/python /usr/bin/psud"
	if does not exist then alert

check process syseepromd matching "/usr/bin/python /usr/bin/syseepromd"
	if does not exist then alert

# For LLDP container.
check process lldpd_monitor matching "lldpd: monitor."
	if does not exist then alert

check process lldp_syncd matching "python2 -m lldp_syncd"
	if does not exist then alert

check process lldpmgrd matching "python /usr/bin/lldpmgrd"
	if does not exist then alert

# For BGP container.
check process zebra matching "/usr/lib/frr/zebra"
	if does not exist then alert

check process fpmsyncd matching "fpmsyncd"
	if does not exist then alert

check process bgpd matching "/usr/lib/frr/bgpd"
	if does not exist then alert

check process bgpcfgd matching "python /usr/bin/bgpcfgd"
	if does not exist then alert

check process staticd matching "/usr/lib/frr/staticd"
	if does not exist then alert

# For swss container.
check process orchagent matching "/usr/bin/orchagent -d /var/log/swss"
	if does not exist then alert

check process portsyncd matching "/usr/bin/portsyncd -p"
	if does not exist then alert

check process neighsyncd matching "/usr/bin/neighsyncd"
	if does not exist then alert

check process vrfmgrd matching "/usr/bin/vrfmgrd"
	if does not exist then alert

check process vlanmgrd matching "/usr/bin/vlanmgrd"
	if does not exist then alert

check process intfmgrd matching "/usr/bin/intfmgrd"
	if does not exist then alert

check process portmgrd matching "/usr/bin/portmgrd"
	if does not exist then alert

check process buffermgrd matching "/usr/bin/buffermgrd -l"
	if does not exist then alert

check process nbrmgrd matching "/usr/bin/nbrmgrd"
	if does not exist then alert

check process vxlanmgrd matching "/usr/bin/vxlanmgrd"
	if does not exist then alert

# For database container
check process redis_server matching "/usr/bin/redis-server"
	if does not exist then alert

# For telemetry container
check process telemetry matching "/usr/sbin/telemetry -logtostderr --insecure"
	if does not exist then alert

check process dialout_client matching "/usr/sbin/dialout_client_cli -insecure -logtostderr"
	if does not exist then alert
