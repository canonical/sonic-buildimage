#!/bin/sh
# filename: 

set -e

if [ -n "${IF_PEER_NETNS}" -a -n "${IF_PEER_IFACE}" ]
then
    logger "if_pre_up_netns: User is enabling management VRF. interfaces.j2 has set the required variables. Create the management namespace if not already present."
	# Create netns if it doesn't already exist, and bring up the loopback
	if ! OUTPUT=$(ip netns list | grep -w ${IF_PEER_NETNS})
	then
        logger "if_pre_up_netns: management vrf does not exist. Create it now."
		mkdir -p /run/network.${IF_PEER_NETNS}
		rm -rf /run/network.${IF_PEER_NETNS}/*
		ip netns add ${IF_PEER_NETNS}
		ip netns exec ${IF_PEER_NETNS} ip link set lo up
	else
        logger "if_pre_up_netns: management vrf already exists. No need to create it."
	fi
	
	if OUTPUT=$(ifconfig eth0)
	then
        logger "if_pre_up_netns: eth0 is in default VRF. Move it to management VRF"
		# Move the management interface eth0 from default namespace to management namespace
		ip link set dev eth0 netns ${IF_PEER_NETNS}
	else
        logger "if_pre_up_netns: eth0 is NOT in default VRF. No need to move it."
	fi
	
	# if veth pair is already existing, there will be a link by name if1@if2
	if ! OUTPUT=$(ethtool -S if2)
	then
		logger "if_pre_up_netns: if1 & if2 are NOT in eth pair. Connect them via eth pair now"
		# Add the veth pair for if2 with peer as if1
		ip link add name ${IFACE} type veth peer name ${IF_PEER_IFACE}
	else
		logger "if_pre_up_netns: if1 & if2 are already in eth pair. NO need to connect them via eth pair now"
	fi
	
	# if if1 is already  part of management namespace, nothing to do. Else move it to the management namespace
	if ! OUTPUT=$(ip netns exec ${IF_PEER_NETNS} ifconfig if1)
	then
		logger "if_pre_up_netns: if1 is not in management VRF. Move it now"
		# Put the remote end interface if1 into the netns
		ip link set dev ${IF_PEER_IFACE} netns ${IF_PEER_NETNS}
	else
		logger "if_pre_up_netns: if1 is alerady in management VRF. no need to move it"
	fi

	# Set if2 as UP
    logger "if_pre_up_netns: Bringing up the if2"
	ip link set ${IFACE} up

fi
