!
{% block banner %}
! =========== Managed by sonic-cfggen DO NOT edit manually! ====================
! generated by templates/quagga/zebra.conf.j2 using config DB data
! file: zebra.conf
!
{% endblock banner %}
!
{% block sys_init %}
hostname {{ DEVICE_METADATA['localhost']['hostname'] }}
password zebra
enable password zebra
{% endblock sys_init %}
!
{% block vrf %}
{%  if VNET is defined %}
{%   for vnet_name, vnet_metadata in VNET.iteritems() %}
vrf {{ vnet_name }}
vni {{ vnet_metadata['vni'] }}
!
{%   endfor %}
{%  endif %}
{% endblock vrf %}
!
{% block interfaces %}
! Enable link-detect (default disabled)
{% for (name, prefix) in INTERFACE|pfx_filter %}
interface {{ name }}
link-detect
!
{% endfor %}
{% for pc in PORTCHANNEL %}
interface {{ pc }}
link-detect
!
{% endfor %}
{% endblock interfaces %}
!
{% block default_route %}
{% if MGMT_INTERFACE %}
! set static default route to mgmt gateway as a backup to learned default
{% for (name, prefix) in MGMT_INTERFACE|pfx_filter %}
{% if prefix | ipv4 %}
ip route 0.0.0.0/0 {{ MGMT_INTERFACE[(name, prefix)]['gwaddr'] }} 200
{% endif %}
{% endfor %}
{% endif %}
{% endblock default_route %}
!
{% block static_route %}
{% if STATIC_ROUTE %}
{% set glb_rt = {} %}
{% set vrf_rt = {} %}
{% for rt_key in STATIC_ROUTE %}
{%   if rt_key is not string() %}
{%     if vrf_rt.has_key(rt_key[0]) or vrf_rt.update({rt_key[0]:{}}) %}
{%     endif %}
{%     if vrf_rt[rt_key[0]].update({rt_key[1]:STATIC_ROUTE[rt_key]}) %}
{%     endif %}
{%   else %}
{%     if glb_rt.update({rt_key:STATIC_ROUTE[rt_key]}) %}
{%     endif %}
{%   endif %}
{% endfor %}
{% for rt_key, rt_attr in glb_rt|dictsort %}
{% if rt_attr.has_key('distance') and rt_attr['distance'] | int != 1 %}
{% if rt_attr.has_key('nexthop-vrf') %}
ip route {{ rt_key }} {{ rt_attr['nexthop'] }} {{ rt_attr['distance'] }} nexthop-vrf {{ rt_attr['nexthop-vrf'] }}
{% else %}
ip route {{ rt_key }} {{ rt_attr['nexthop'] }} {{ rt_attr['distance'] }}
{% endif %}
{% else %}
{% if rt_attr.has_key('nexthop-vrf') %}
ip route {{ rt_key }} {{ rt_attr['nexthop'] }} nexthop-vrf {{ rt_attr['nexthop-vrf'] }}
{% else %}
ip route {{ rt_key }} {{ rt_attr['nexthop'] }}
{% endif %}
{% endif %}
{% endfor %}
!
{% for vrf, rt in vrf_rt|dictsort %}
vrf {{ vrf }}
{% for rt_key, rt_attr in rt|dictsort %}
{% if rt_attr.has_key('distance') and rt_attr['distance'] | int != 1 %}
{% if rt_attr.has_key('nexthop-vrf') %}
  ip route {{ rt_key }} {{ rt_attr['nexthop'] }} {{ rt_attr['distance'] }} nexthop-vrf {{ rt_attr['nexthop-vrf'] }}
{% else %}
  ip route {{ rt_key }} {{ rt_attr['nexthop'] }} {{ rt_attr['distance'] }}
{% endif %}
{% else %}
{% if rt_attr.has_key('nexthop-vrf') %}
  ip route {{ rt_key }} {{ rt_attr['nexthop'] }} nexthop-vrf {{ rt_attr['nexthop-vrf'] }}
{% else %}
  ip route {{ rt_key }} {{ rt_attr['nexthop'] }}
{% endif %}
{% endif %}
{% endfor %}
!
{% endfor %}
{% endif %}
{% endblock static_route %}
{% block source_loopback %}
{% set lo_ipv4_addrs = [] %}
{% set lo_ipv6_addrs = [] %}
{% if LOOPBACK_INTERFACE %}
{%   for (name, prefix) in LOOPBACK_INTERFACE|pfx_filter %}
{%     if name == 'Loopback0' %}
{%       if prefix | ipv6 %}
{%         if lo_ipv6_addrs.append(prefix) %}
{%         endif %}
{%       else %}
{%         if lo_ipv4_addrs.append(prefix) %}
{%         endif %}
{%       endif %}
{%     endif %}
{%   endfor %}
{% endif %}
! Set ip source to loopback for bgp learned routes
{% if lo_ipv4_addrs|length > 0 -%} 
route-map RM_SET_SRC permit 10
    set src {{ lo_ipv4_addrs[0] | ip }}
!
{% endif %}
{% if lo_ipv6_addrs|length > 0 %} 
route-map RM_SET_SRC6 permit 10
    set src {{ lo_ipv6_addrs[0] | ip }}
!
{% endif %}
ip protocol bgp route-map RM_SET_SRC
!
{% if lo_ipv6_addrs|length > 0 %}
ipv6 protocol bgp route-map RM_SET_SRC6
!
{% endif %}
{% endblock source_loopback %}
!
{% block logging %}
log syslog informational
log facility local4
{% endblock logging %}
!

