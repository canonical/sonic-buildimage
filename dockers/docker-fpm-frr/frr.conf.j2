{# bgp_neighbor_detail #}
{% macro bgp_neighbor_detail(neighbor_addr, bgp_session) -%}
{% if bgp_session.has_key('asn') and bgp_session['asn'] | int != 0 %}
  neighbor {{ neighbor_addr }} remote-as {{ bgp_session['asn'] }}
  neighbor {{ neighbor_addr }} description {{ bgp_session['name'] }}
{% if bgp_session.has_key('policy_in') %}
{% set policy_in_arr = bgp_session['policy_in'].split('|') %}
{% for policy_in in policy_in_arr %}
  neighbor {{ neighbor_addr }} route-map {{ policy_in }} in
{% endfor %}
{% endif %}
{% if bgp_session.has_key('policy_out') %}
{% set policy_out_arr = bgp_session['policy_out'].split('|') %}
{% for policy_out in policy_out_arr %}
  neighbor {{ neighbor_addr }} route-map {{ policy_out }} out
{% endfor %}
{% endif %}
{% if bgp_session.has_key('policy_import') %}
{% set policy_import_arr = bgp_session['policy_import'].split('|') %}
{% for policy_import in policy_import_arr %}
  neighbor {{ neighbor_addr }} route-map {{ policy_import }} import
{% endfor %}
{% endif %}
{% if bgp_session.has_key('policy_export') %}
{% set policy_export_arr = bgp_session['policy_export'].split('|') %}
{% for policy_export in policy_export_arr %}
  neighbor {{ neighbor_addr }} route-map {{ policy_export }} export
{% endfor %}
{% endif %}
{% if bgp_session.has_key('password') %}
  neighbor {{ neighbor_addr }} password {{ bgp_session['password'] }}
{% endif %}
{% if bgp_session.has_key('ebgp_multihop') %}
  neighbor {{ neighbor_addr }} ebgp-multihop {{ bgp_session['ebgp_multihop'] }}
{% endif %}
{% if bgp_session.has_key('prefix_in') %}
{% set prefix_in_arr = bgp_session['prefix_in'].split('|') %}
{% for prefix_in in prefix_in_arr %}
  neighbor {{ neighbor_addr }} prefix-list {{ prefix_in }} in
{% endfor %}
{% endif %}
{% if bgp_session.has_key('prefix_out') %}
{% set prefix_out_arr = bgp_session['prefix_out'].split('|') %}
{% for prefix_out in prefix_out_arr %}
  neighbor {{ neighbor_addr }} prefix-list {{ prefix_out }} out
{% endfor %}
{% endif %}
{% if bgp_session.has_key('admin_status') and bgp_session['admin_status'] == 'down' or not bgp_session.has_key('admin_status') and DEVICE_METADATA['localhost'].has_key('default_bgp_status') and DEVICE_METADATA['localhost']['default_bgp_status'] == 'down' %}
  neighbor {{ neighbor_addr }} shutdown
{% endif %}
{% set default_maximum_paths = 32 %}
{% if bgp_session.has_key('maximum_paths') %}
{% set default_maximum_paths = bgp_session['maximum_paths'] %}
{% endif %}
{% if neighbor_addr | ipv4 %}
  address-family ipv4
    neighbor {{ neighbor_addr }} activate
    maximum-paths {{ default_maximum_paths }}
  exit-address-family
{% elif neighbor_addr | ipv6 %}
  address-family ipv6
    neighbor {{ neighbor_addr }} activate
    maximum-paths {{ default_maximum_paths }}
  exit-address-family
{% endif %}
{% endif %}
{%- endmacro %}
!
{% block banner %}
! =========== Managed by sonic-cfggen DO NOT edit manually! ====================
! generated by templates/frr/frr.conf.j2 with config DB data
! file: frr.conf
!
{% endblock banner %}
!
{% block system_init %}
hostname {{ DEVICE_METADATA['localhost']['hostname'] }}
password zebra
log syslog informational
log facility local4
! enable password {# {{ en_passwd }} TODO: param needed #}
{% endblock system_init %}
!
{% block interfaces %}
! Enable link-detect (default disabled)
{% for (name, prefix) in INTERFACE %}
interface {{ name }}
link-detect
!
{% endfor %}
{% for pc in PORTCHANNEL %}
interface {{ pc }}
link-detect
!
{% endfor %}
{% endblock interfaces %}
!
{% block source_loopback %}
{% set lo_ipv4_addrs = [] %}
{% set lo_ipv6_addrs = [] %}
{% if LOOPBACK_INTERFACE %}
{%   for (name, prefix) in LOOPBACK_INTERFACE %}
{%     if name == 'Loopback0' %}
{%       if prefix | ipv6 %}
{%         if lo_ipv6_addrs.append(prefix) %}
{%         endif %}
{%       else %}
{%         if lo_ipv4_addrs.append(prefix) %}
{%         endif %}
{%       endif %}
{%     endif %}
{%   endfor %}
{% endif %}
! Set ip source to loopback for bgp learned routes
route-map RM_SET_SRC permit 10
    set src {{ lo_ipv4_addrs[0] | ip }}
!
{% if lo_ipv6_addrs|length > 0 %}
route-map RM_SET_SRC6 permit 10
    set src {{ lo_ipv6_addrs[0] | ip }}
!
{% endif %}
ip protocol bgp route-map RM_SET_SRC
!
{% if lo_ipv6_addrs|length > 0 %}
ipv6 protocol bgp route-map RM_SET_SRC6
!
{% endif %}
{% endblock source_loopback %}
!
{% block static_route %}
! set static route by user
{% for sr in STATIC_ROUTE %}
{% set dstip_val = sr[0] %}
{% set nexthop_val = sr[1] %}
{% if dstip_val | ipv4 or dstip_val | ipv6 %}
ip route {{ dstip_val }} {{ nexthop_val }} {{ STATIC_ROUTE[sr]['ad']|default('') }}
{% endif %}
{% endfor %}
{% endblock static_route %}
!
{# BGP local and session configures #}
{% if DEVICE_METADATA['localhost'].has_key('bgp_asn') and DEVICE_METADATA['localhost']['bgp_asn'] | int %}
{% block bgp_init %}
!
! bgp multiple-instance
!
route-map FROM_BGP_SPEAKER_V4 permit 10
!
route-map TO_BGP_SPEAKER_V4 deny 10
!
router bgp {{ DEVICE_METADATA['localhost']['bgp_asn'] }}
  bgp log-neighbor-changes
  bgp bestpath as-path multipath-relax
  no bgp default ipv4-unicast
{% if BGP_METADATA and BGP_METADATA.has_key('localhost') %}
{# distribute route #}
{% if BGP_METADATA['localhost']['redistribute'] and BGP_METADATA['localhost']['redistribute'] != '' %}
{% set redistribute_arr = BGP_METADATA['localhost']['redistribute'].split('|') %}
{% for arr in redistribute_arr %}
  redistribute {{ arr }}
{% endfor %}
{% endif %}
{# Advertise graceful restart capability #}
{% if BGP_METADATA['localhost'].has_key('graceful_restart_param') %}
  bgp graceful-restart
{% set gr_params = BGP_METADATA['localhost']['graceful_restart_param'].split('|') %}
{% for gr_param in gr_params %}
  bgp graceful-restart {{ gr_param }}
{% endfor %}
{% endif %}
{% endif %}
{# Router ID #}
{% if BGP_METADATA and BGP_METADATA.has_key('localhost') and BGP_METADATA['localhost'].has_key('router_id') %}
  bgp router-id {{ BGP_METADATA['localhost']['router_id'] }}
{% else %}
{% for (name, prefix) in LOOPBACK_INTERFACE %}
{% if prefix | ipv4 and name == 'Loopback0' %}
  bgp router-id {{ prefix | ip }}
{% endif %}
{% endfor %}
{% endif %}
{# advertise loopback #}
{% for (name, prefix) in LOOPBACK_INTERFACE %}
{% if prefix | ipv4 and name == 'Loopback0' %}
  network {{ prefix | ip }}/32
{% elif prefix | ipv6 and name == 'Loopback0' %}
  address-family ipv6
    network {{ prefix | ip }}/64
  exit-address-family
{% endif %}
{% endfor %}
{% endblock bgp_init %}
{% block vlan_advertisement %}
{% for (name, prefix) in VLAN_INTERFACE %}
{% if prefix | ipv4 %}
  network {{ prefix }}
{% elif prefix | ipv6 %}
  address-family ipv6
   network {{ prefix }}
  exit-address-family
{% endif %}
{% endfor %}
{% endblock vlan_advertisement %}
{% block bgp_sessions %}
{% if BGP_NEIGHBOR %}
{% for neighbor_addr, bgp_session in BGP_NEIGHBOR.iteritems() %}
{# add peer-group block: if neighbor_addr is not IPADDR, then it's peer_group #}
{% if neighbor_addr | ipv4 or neighbor_addr | ipv6 %}
{% if bgp_session.has_key('peer_group') %}
  neighbor {{ neighbor_addr }} peer-group {{ bgp_session['peer_group'] }}
{% endif %}
{{ bgp_neighbor_detail(neighbor_addr, bgp_session) }}
{% else %}
  neighbor {{ neighbor_addr }} peer-group
{{ bgp_neighbor_detail(neighbor_addr, bgp_session) }}
{% endif %}
{% endfor %}
{% endif %}
{% endblock bgp_sessions %}
{% block bgp_peers_with_range %}
{% if BGP_PEER_RANGE %}
{% for bgp_peer in BGP_PEER_RANGE.values() %}
  neighbor {{ bgp_peer['name'] }} peer-group
  neighbor {{ bgp_peer['name'] }} passive
  neighbor {{ bgp_peer['name'] }} remote-as {{ deployment_id_asn_map[DEVICE_METADATA['localhost']['deployment_id']] }}
  neighbor {{ bgp_peer['name'] }} ebgp-multihop 255
  neighbor {{ bgp_peer['name'] }} soft-reconfiguration inbound
{% for (name, prefix) in LOOPBACK_INTERFACE %}
{% if name == 'Loopback1' %}
  neighbor {{ bgp_peer['name'] }} update-source {{ prefix | ip }}
{% endif %}
{% endfor %}
  neighbor {{ bgp_peer['name'] }} route-map FROM_BGP_SPEAKER_V4 in
  neighbor {{ bgp_peer['name'] }} route-map TO_BGP_SPEAKER_V4 out
{% for ip_range in bgp_peer['ip_range'] %}
  bgp listen range {{ip_range}} peer-group {{ bgp_peer['name'] }}
{% endfor %}
  address-family ipv4
    neighbor {{ bgp_peer['name'] }} activate
    maximum-paths 64
  exit-address-family
  address-family ipv6
    neighbor {{ bgp_peer['name'] }} activate
    maximum-paths 64
  exit-address-family
{% endfor %}
{% endif %}
{% endblock bgp_peers_with_range %}
{% endif %}
!
{# BGP policies #}
{% if DEVICE_METADATA['localhost'].has_key('bgp_asn') %}
{% set default_maximum_paths = 32 %}
{% if BGP_METADATA and BGP_METADATA.has_key('localhost') and BGP_METADATA['localhost'].has_key('maximum_paths') %}
{% set default_maximum_paths = BGP_METADATA['localhost']['maximum_paths'] %}
{% endif %}
maximum-paths {{ default_maximum_paths }}
!
route-map ISOLATE permit 10
set as-path prepend {{ DEVICE_METADATA['localhost']['bgp_asn'] }}
!
{# access-list block #}
{% if IP_ACCESS_LIST %}
{% for (name, rules) in IP_ACCESS_LIST.iteritems() %}
{% for rule in rules %}
access-list {{ name }} {{ rule }}
{% endfor %}
{% endfor %}
{% endif %}
!
{# ip prefix block #}
{% if BGP_PREFIX_SET %}
{% for name, name_data in BGP_PREFIX_SET.iteritems() %}
{% if name_data.has_key('seq') %}
{% set seq_str = 'seq ' + name_data['seq'] %}
{% endif %}
ip prefix-list {{ name[1] }} {{ seq_str }} {{ name[2] }} prefix {{ name[0] }} {{ name_data['compare'] }} {{ name_data['length'] }}
{% endfor %}
{% endif %}
!
{# ip community block #}
{% if BGP_COMMUNITY_SET %}
{% for name, name_data in BGP_COMMUNITY_SET.iteritems() %}
ip community-list {{ name }} {{ name_data['action'] }} {{ name_data['line'] }}
{% endfor %}
{% endif %}
!
{# ip as_path block #}
{% if BGP_AS_SET %}
{% for name, name_data in BGP_AS_SET.iteritems() %}
ip as-path access-list {{ name }} {{ name_data['action'] }} {{ name_data['line'] }}
{% endfor %}
{% endif %}
!
{# route-map block #}
{% if BGP_POLICY_ROUTE_MAP %}
{% for policy_name, policy_body in BGP_POLICY_ROUTE_MAP.iteritems() %}
route-map {{ policy_name[0] }} {{ policy_name[1] }} {{ policy_name[2] }}
{% for match_name, action_term in policy_body.iteritems() %}
{% if match_name == "description" %}
  description {{ action_term }}
{% elif match_name == "match_as_path" %}
  match as-path {{ action_term }}
{% elif match_name == "set_as_path" %}
{% if action_term | int %}
  set as-path prepend last-as {{ action_term }}
{% else %}
  set as-path prepend {{ action_term }}
{% endif %}
{% elif match_name == "match_prefix_list" %}
{% set action_term_arr = action_term.split('|') %}
  match {{ action_term_arr[0] }} address prefix-list {{ action_term_arr[1] }}
{% elif match_name == "set_metric" %}
  set metric {{ action_term }}
{% elif match_name == "set_community" %}
  set community {{ action_term }}
{% elif match_name == "set_local_preference" %}
  set local-preference {{ action_term }}
{% elif match_name == "set_ip_next_hop" %}
  set ip next-hop {{ action_term }}
{% endif %}
{% endfor %}
{% endfor %}
{% endif %}
{# end of route-map block #}
!
{% endif %}