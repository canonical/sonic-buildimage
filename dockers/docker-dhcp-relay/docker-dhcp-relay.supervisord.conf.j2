[supervisord]
logfile_maxbytes=1MB
logfile_backups=2
nodaemon=true

[program:start.sh]
command=/usr/bin/start.sh
priority=1
autostart=true
autorestart=false
stdout_logfile=syslog
stderr_logfile=syslog

[program:rsyslogd]
command=/usr/sbin/rsyslogd -n
priority=2
autostart=false
autorestart=false
stdout_logfile=syslog
stderr_logfile=syslog

{# If our configuration has VLANs... #}
{% if minigraph_vlans | length > 0 %}
[group:isc-dhcp-relay]
programs=
{%- set add_preceding_comma = { 'flag': False } -%}
{%- for vlan in minigraph_vlans.values() -%}
{%- if vlan['dhcp_servers'] | length > 0 -%}
{%- if add_preceding_comma.flag %},{% endif -%}
{%- set _dummy = add_preceding_comma.update({'flag': True}) -%}
isc-dhcp-relay-{{ vlan['name'] }}
{%- endif %}
{% endfor %}


{# Create a program entry for each DHCP relay agent instance #}
{% for vlan in minigraph_vlans.values() %}
[program:isc-dhcp-relay-{{ vlan['name'] }}]
command=/usr/sbin/dhcrelay -d -a %%h:%%p %%P -i {{ vlan['name'] }}
{%- for interface in minigraph_interfaces -%}
{%- if interface['addr'] | ipv4 %} -i {{ interface['attachto'] }}{% endif -%}
{%- endfor -%}
{%- for pc_interface in minigraph_portchannel_interfaces -%}
{%- if pc_interface['addr'] | ipv4 %} -i {{ pc_interface['attachto'] }}{% endif -%}
{%- endfor -%}
{%- for dhcp_server in vlan['dhcp_servers'] %} {{ dhcp_server }}{% endfor %}

priority=3
autostart=false
autorestart=false
stdout_logfile=syslog
stderr_logfile=syslog

{% endfor %}
{% endif %}
