diff --git a/src/crypto/crypto_openssl.c b/src/crypto/crypto_openssl.c
index b644b6ca7..ce4ae8a72 100644
--- a/src/crypto/crypto_openssl.c
+++ b/src/crypto/crypto_openssl.c
@@ -193,12 +193,15 @@ static int openssl_digest_vector(const EVP_MD *type, size_t num_elem,
 }
 
 
-#ifndef CONFIG_FIPS
 int md4_vector(size_t num_elem, const u8 *addr[], const size_t *len, u8 *mac)
 {
+#ifndef CONFIG_FIPS
 	return openssl_digest_vector(EVP_md4(), num_elem, addr, len, mac);
-}
+#else 
+	wpa_printf(MSG_ERROR, "OpenSSL %s: md4 is not allowed in FIPS mode", __func__);
+	return -1;
 #endif /* CONFIG_FIPS */
+}
 
 
 int des_encrypt(const u8 *clear, const u8 *key, u8 *cypher)
@@ -264,12 +267,15 @@ out:
 #endif /* CONFIG_NO_RC4 */
 
 
-#ifndef CONFIG_FIPS
 int md5_vector(size_t num_elem, const u8 *addr[], const size_t *len, u8 *mac)
 {
+#ifndef CONFIG_FIPS
 	return openssl_digest_vector(EVP_md5(), num_elem, addr, len, mac);
-}
+#else 
+	wpa_printf(MSG_ERROR, "OpenSSL %s: md5 is not allowed in FIPS mode", __func__);
+	return -1;
 #endif /* CONFIG_FIPS */
+}
 
 
 int sha1_vector(size_t num_elem, const u8 *addr[], const size_t *len, u8 *mac)
@@ -1105,23 +1111,29 @@ done:
 }
 
 
-#ifndef CONFIG_FIPS
-
 int hmac_md5_vector(const u8 *key, size_t key_len, size_t num_elem,
 		    const u8 *addr[], const size_t *len, u8 *mac)
 {
+#ifndef CONFIG_FIPS
 	return openssl_hmac_vector(EVP_md5(), key ,key_len, num_elem, addr, len,
 				   mac, 16);
+#else
+	wpa_printf(MSG_ERROR, "OpenSSL %s: md5 is not allowed in FIPS mode", __func__);
+	return -1;
+#endif /* CONFIG_FIPS */
 }
 
 
 int hmac_md5(const u8 *key, size_t key_len, const u8 *data, size_t data_len,
 	     u8 *mac)
 {
+#ifndef CONFIG_FIPS
 	return hmac_md5_vector(key, key_len, 1, &data, &data_len, mac);
-}
-
+#else
+	wpa_printf(MSG_ERROR, "OpenSSL %s: md5 is not allowed in FIPS mode", __func__);
+	return -1;
 #endif /* CONFIG_FIPS */
+}
 
 
 int pbkdf2_sha1(const char *passphrase, const u8 *ssid, size_t ssid_len,
