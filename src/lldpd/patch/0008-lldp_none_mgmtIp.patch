diff --git a/src/daemon/interfaces-bsd.c b/src/daemon/interfaces-bsd.c
old mode 100644
new mode 100755
index 458e02c..341490a
--- a/src/daemon/interfaces-bsd.c
+++ b/src/daemon/interfaces-bsd.c
@@ -672,7 +672,7 @@ interfaces_update(struct lldpd *cfg)
 #ifdef ENABLE_DOT1
 	interfaces_helper_vlan(cfg, interfaces);
 #endif
-	interfaces_helper_mgmt(cfg, addresses);
+	interfaces_helper_mgmt(cfg, addresses, interfaces);
 	interfaces_helper_chassis(cfg, interfaces);
 
 	/* Mac/PHY */
diff --git a/src/daemon/interfaces-linux.c b/src/daemon/interfaces-linux.c
old mode 100644
new mode 100755
index fb48b69..dc01377
--- a/src/daemon/interfaces-linux.c
+++ b/src/daemon/interfaces-linux.c
@@ -851,7 +851,7 @@ interfaces_update(struct lldpd *cfg)
 #ifdef ENABLE_DOT1
 	interfaces_helper_vlan(cfg, interfaces);
 #endif
-	interfaces_helper_mgmt(cfg, addresses);
+	interfaces_helper_mgmt(cfg, addresses, interfaces);
 	interfaces_helper_chassis(cfg, interfaces);
 
 	/* Mac/PHY */
diff --git a/src/daemon/interfaces-solaris.c b/src/daemon/interfaces-solaris.c
old mode 100644
new mode 100755
index 0f9f5e5..f9d8bc5
--- a/src/daemon/interfaces-solaris.c
+++ b/src/daemon/interfaces-solaris.c
@@ -164,7 +164,7 @@ interfaces_update(struct lldpd *cfg) {
 	interfaces_helper_whitelist(cfg, interfaces);
 	interfaces_helper_physical(cfg, interfaces,
 	    &bpf_ops, ifbpf_phys_init);
-	interfaces_helper_mgmt(cfg, addresses);
+	interfaces_helper_mgmt(cfg, addresses, interfaces);
 	interfaces_helper_chassis(cfg, interfaces);
 
 	/* Mac/PHY */
diff --git a/src/daemon/interfaces.c b/src/daemon/interfaces.c
old mode 100644
new mode 100755
index f0aacce..9b06958
--- a/src/daemon/interfaces.c
+++ b/src/daemon/interfaces.c
@@ -379,9 +379,11 @@ static int
 interfaces_helper_mgmt_for_af(struct lldpd *cfg,
     int af,
     struct interfaces_address_list *addrs,
+	struct interfaces_device_list *interfaces,
     int global, int allnegative)
 {
 	struct interfaces_address *addr;
+	struct interfaces_device *device;
 	struct lldpd_mgmt *mgmt;
 	char addrstrbuf[INET6_ADDRSTRLEN];
 	int found = 0;
@@ -427,9 +429,13 @@ interfaces_helper_mgmt_for_af(struct lldpd *cfg,
 			continue;
 		}
 		if (cfg->g_config.c_mgmt_pattern == NULL ||
-		    pattern_match(addrstrbuf, cfg->g_config.c_mgmt_pattern, allnegative)) {
-			mgmt = lldpd_alloc_mgmt(af, &in_addr, in_addr_size,
-			    addr->index);
+		    /* Match on IP address */
+		    pattern_match(addrstrbuf, cfg->g_config.c_mgmt_pattern, allnegative) ||
+			/* Scot, 2021/12/15, ISU2021121033056, add interface pattern check */
+		    /* Match on interface name */
+		    ((device = interfaces_indextointerface(interfaces, addr->index)) &&
+		    pattern_match(device->name, cfg->g_config.c_mgmt_pattern, allnegative))) {
+				mgmt = lldpd_alloc_mgmt(af, &in_addr, in_addr_size, addr->index);
 			if (mgmt == NULL) {
 				assert(errno == ENOMEM); /* anything else is a bug */
 				log_warn("interfaces", "out of memory error");
@@ -452,7 +458,8 @@ interfaces_helper_mgmt_for_af(struct lldpd *cfg,
    to the local chassis). */
 void
 interfaces_helper_mgmt(struct lldpd *cfg,
-    struct interfaces_address_list *addrs)
+    struct interfaces_address_list *addrs,
+	struct interfaces_device_list *interfaces)
 {
 	int allnegative = 0;
 	int af;
@@ -464,8 +471,15 @@ interfaces_helper_mgmt(struct lldpd *cfg,
 
 	/* Is the pattern provided an actual IP address? */
 	if (pattern && strpbrk(pattern, "!,*?") == NULL) {
+#if 0
 		struct in6_addr addr;
 		size_t addr_size;
+#endif
+		struct in6_addr addr;
+		size_t addr_size;
+		struct lldpd_mgmt *mgmt;
+		struct interfaces_address *ifaddr;
+
 		for (af = LLDPD_AF_UNSPEC + 1;
 		     af != LLDPD_AF_LAST; af++) {
 			switch (af) {
@@ -476,6 +490,7 @@ interfaces_helper_mgmt(struct lldpd *cfg,
 			if (inet_pton(lldpd_af(af), pattern, &addr) == 1)
 				break;
 		}
+#if 0 /* Scot, 2021/12/15, ISU2021121033056, get possible mgmt ip for all interfaces */
 		if (af == LLDPD_AF_LAST) {
 			log_debug("interfaces",
 			    "interface management pattern is an incorrect IP");
@@ -491,7 +506,39 @@ interfaces_helper_mgmt(struct lldpd *cfg,
 			TAILQ_INSERT_TAIL(&LOCAL_CHASSIS(cfg)->c_mgmt, mgmt, m_entries);
 		}
 		return;
+#else
+		if (af != LLDPD_AF_LAST) {
+			/* Try to get the index if possible. */
+			TAILQ_FOREACH(ifaddr, addrs, next) {
+				if (ifaddr->address.ss_family != lldpd_af(af))
+					continue;
+				if (LLDPD_AF_IPV4 == af) {
+					struct sockaddr_in *sa_sin;
+					sa_sin = (struct sockaddr_in *)&ifaddr->address;
+					if ((sa_sin->sin_addr.s_addr) == ((struct in_addr *)&addr)->s_addr)
+						break;
+				}
+				else if (LLDPD_AF_IPV6 == af) {
+					if (0 == memcmp(&addr,
+					    &((struct sockaddr_in6 *)&ifaddr->address)->sin6_addr,
+					    addr_size))
+						break;
+				}
+			}
+
+			mgmt = lldpd_alloc_mgmt(af, &addr, addr_size, ifaddr ? ifaddr->index : 0);
+			if (mgmt == NULL) {
+				log_warn("interfaces", "out of memory error");
+				return;
+			}
+			log_debug("interfaces", "add exact management address %s",
+			    pattern);
+			TAILQ_INSERT_TAIL(&LOCAL_CHASSIS(cfg)->c_mgmt, mgmt, m_entries);
+			return;
+		}
+		/* else: could be an interface name */
 	}
+#endif /* Scot, 2021/12/15, ISU2021121033056, get possible mgmt ip for all interfaces */
 
 	/* Is the pattern provided all negative? */
 	if (pattern == NULL) allnegative = 1;
@@ -506,8 +553,8 @@ interfaces_helper_mgmt(struct lldpd *cfg,
 
 	/* Find management addresses */
 	for (af = LLDPD_AF_UNSPEC + 1; af != LLDPD_AF_LAST; af++) {
-		(void)(interfaces_helper_mgmt_for_af(cfg, af, addrs, 1, allnegative) ||
-		    interfaces_helper_mgmt_for_af(cfg, af, addrs, 0, allnegative));
+		(void)(interfaces_helper_mgmt_for_af(cfg, af, addrs, interfaces, 1, allnegative) ||
+		    interfaces_helper_mgmt_for_af(cfg, af, addrs, interfaces, 0, allnegative));
 	}
 }
 
diff --git a/src/daemon/lldpd.h b/src/daemon/lldpd.h
old mode 100644
new mode 100755
index 5c475f4..c7ec0dd
--- a/src/daemon/lldpd.h
+++ b/src/daemon/lldpd.h
@@ -390,7 +390,8 @@ void interfaces_helper_port_name_desc(struct lldpd *,
     struct lldpd_hardware *,
     struct interfaces_device *);
 void interfaces_helper_mgmt(struct lldpd *,
-    struct interfaces_address_list *);
+    struct interfaces_address_list *,
+	struct interfaces_device_list *);
 #ifdef ENABLE_DOT1
 void interfaces_helper_vlan(struct lldpd *,
     struct interfaces_device_list *);
