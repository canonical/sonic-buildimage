# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
  branches:
    include:
      - master
      - 202???
  paths:
    exclude:
      - .github

pr:
  branches:
    include:
      - master
      - 202???
  paths:
    exclude:
      - .github

name: $(TeamProject)_$(Build.DefinitionName)_$(SourceBranchName)_$(Date:yyyyMMdd)$(Rev:.r)

resources:
  repositories:
    - repository: sonic-mgmt
      type: github
      name: sonic-net/sonic-mgmt
      endpoint: sonic-net
    - repository: buildimage
      type: github
      name: sonic-net/sonic-buildimage
      endpoint: sonic-net
      ref: master
    - repository: sonic-mgmt-chunangli
      type: github
      name: lerry-lee/sonic-mgmt
      ref: chunangli/add_run_test_elastictest_template
      endpoint: sonic-net

variables:
  - template: .azure-pipelines/azure-pipelines-repd-build-variables.yml@buildimage
  - template: .azure-pipelines/template-variables.yml@buildimage
  - name: CACHE_MODE
    value: rcache
  - name: ENABLE_FIPS
    value: y

stages:
  - stage: BuildVS
    pool: sonicbld
    jobs:
      - template: .azure-pipelines/azure-pipelines-build.yml
        parameters:
          buildOptions: 'USERNAME=admin SONIC_BUILD_JOBS=$(nproc) BUILD_MULTIASIC_KVM=y ${{ variables.VERSION_CONTROL_OPTIONS }}'
          jobGroups:
            - name: vs
  - stage: Test
    dependsOn: BuildVS
    condition: and(succeeded(), in(dependencies.BuildVS.result, 'Succeeded', 'SucceededWithIssues'))
    variables:
      - group: SONiC-Elastictest
      - name: inventory
        value: veos_vtb
      - name: testbed_file
        value: vtestbed.csv
    jobs:
      - job: t0_elastictest
        pool: ubuntu-20.04
        displayName: "kvmtest-t0 by Elastictest"
        timeoutInMinutes: 240
        continueOnError: false
        steps:
          - template: .azure-pipelines/run-test-elastictest-template.yml@sonic-mgmt-chunangli
            parameters:
              TOPOLOGY: t0
              MIN_WORKER: $(T0_INSTANCE_NUM)
              MAX_WORKER: $(T0_INSTANCE_NUM)
              MGMT_BRANCH: "master"
#
#  - job: t0_2vlans_elastictest
#    pool: ubuntu-20.04
#    displayName: "kvmtest-t0-2vlans by Elastictest"
#    timeoutInMinutes: 240
#    continueOnError: false
#    steps:
#    - template: .azure-pipelines/run-test-scheduler-template.yml
#      parameters:
#        TOPOLOGY: t0
#        TEST_SET: t0-2vlans
#        MIN_WORKER: $(T0_2VLANS_INSTANCE_NUM)
#        MAX_WORKER: $(T0_2VLANS_INSTANCE_NUM)
#        MGMT_BRANCH: master
#        DEPLOY_MG_EXTRA_PARAMS: "-e vlan_config=two_vlan_a"
#
#  - job: t1_lag_elastictest
#    pool: ubuntu-20.04
#    displayName: "kvmtest-t1-lag by Elastictest"
#    timeoutInMinutes: 240
#    continueOnError: false
#    steps:
#    - template: .azure-pipelines/run-test-scheduler-template.yml
#      parameters:
#        TOPOLOGY: t1-lag
#        MIN_WORKER: $(T1_LAG_INSTANCE_NUM)
#        MAX_WORKER: $(T1_LAG_INSTANCE_NUM)
#        MGMT_BRANCH: master
#
#  - job: multi_asic_elastictest
#    displayName: "kvmtest-multi-asic-t1-lag by Elastictest"
#    pool: ubuntu-20.04
#    timeoutInMinutes: 240
#    continueOnError: false
#    steps:
#      - template: .azure-pipelines/run-test-scheduler-template.yml
#        parameters:
#          TOPOLOGY: t1-8-lag
#          TEST_SET: multi-asic-t1-lag
#          MIN_WORKER: $(MULTI_ASIC_INSTANCE_NUM)
#          MAX_WORKER: $(MULTI_ASIC_INSTANCE_NUM)
#          NUM_ASIC: 4
#          MGMT_BRANCH: master
#
#  - job: dualtor_elastictest
#    pool: ubuntu-20.04
#    displayName: "kvmtest-dualtor-t0 by Elastictest"
#    timeoutInMinutes: 240
#    continueOnError: false
#    steps:
#      - template: .azure-pipelines/run-test-scheduler-template.yml
#        parameters:
#          TOPOLOGY: dualtor
#          MIN_WORKER: $(T0_DUALTOR_INSTANCE_NUM)
#          MAX_WORKER: $(T0_DUALTOR_INSTANCE_NUM)
#          MGMT_BRANCH: master
#          COMMON_EXTRA_PARAMS: "--disable_loganalyzer "
#
#  - job: sonic_t0_elastictest
#    displayName: "kvmtest-t0-sonic by Elastictest"
#    pool: ubuntu-20.04
#    timeoutInMinutes: 240
#    continueOnError: false
#    steps:
#      - template: .azure-pipelines/run-test-scheduler-template.yml
#        parameters:
#          TOPOLOGY: t0-64-32
#          MIN_WORKER: $(T0_SONIC_INSTANCE_NUM)
#          MAX_WORKER: $(T0_SONIC_INSTANCE_NUM)
#          TEST_SET: t0-sonic
#          MGMT_BRANCH: master
#          COMMON_EXTRA_PARAMS: "--neighbor_type=sonic "
#          VM_TYPE: vsonic

#  - job: wan_elastictest
#    displayName: "kvmtest-wan by Elastictest"
#    pool: ubuntu-20.04
#    timeoutInMinutes: 240
#    continueOnError: false
#    steps:
#      - template: .azure-pipelines/run-test-scheduler-template.yml
#        parameters:
#          TOPOLOGY: wan-pub
#          MIN_WORKER: $(WAN_INSTANCE_NUM)
#          MAX_WORKER: $(WAN_INSTANCE_NUM)
#          COMMON_EXTRA_PARAMS: "--skip_sanity "
